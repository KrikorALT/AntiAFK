
local keyEntryScreen = Instance.new("ScreenGui")
keyEntryScreen.Name = "KeyEntryScreen"
keyEntryScreen.Parent = game.CoreGui

local keyEntryFrame = Instance.new("Frame")
keyEntryFrame.Name = "KeyEntryFrame"
keyEntryFrame.Size = UDim2.new(0, 300, 0, 200)
keyEntryFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
keyEntryFrame.Parent = keyEntryScreen

local keyTextBox = Instance.new("TextBox")
keyTextBox.Name = "KeyTextBox"
keyTextBox.Size = UDim2.new(0.8, 0, 0.2, 0)
keyTextBox.Position = UDim2.new(0.1, 0, 0.3, 0)
keyTextBox.Parent = keyEntryFrame


local submitButton = Instance.new("TextButton")
submitButton.Name = "SubmitButton"
submitButton.Text = "Submit"
submitButton.Size = UDim2.new(0.8, 0, 0.2, 0)
submitButton.Position = UDim2.new(0.1, 0, 0.6, 0)
submitButton.Parent = keyEntryFrame


local function submitKey()
  -- Get the key from the text box
  local enteredKey = keyTextBox.Text

 
  if enteredKey == "Krik" then
    -- If the key is correct, hide the key entry screen and show the main UI
    keyEntryScreen.Visible = false
    mainScreen.Visible = true
  else
    -- If the key is incorrect, display an error message
    keyTextBox.Text = "Invalid key. Please try again."
  end
end


submitButton.MouseButton1Click:Connect(submitKey)


local screen = Instance.new("ScreenGui")
screen.Name = "AFKPreventer"
screen.Parent = game.CoreGui
screen.Visible = false  -- Initially hide the main UI

local frame = Instance.new("Frame")
frame.Name = "DraggableFrame"
frame.Size = UDim2.new(0, 150, 0, 45)
frame.Position = UDim2.new(0.5, -100, 0.5, -50)
frame.Draggable = true
frame.BackgroundTransparency = 0.5  -- Modify this line to set the transparency
frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
frame.Parent = screen

local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Text = "Turn On"
toggleButton.Size = UDim2.new(1, 0, 1, 0)
toggleButton.Position = UDim2.new(0, 0, 0, 0)
toggleButton.Parent = frame

local afkPreventerOn = false

local function toggleAFKPreventer()
    if afkPreventerOn then
        -- Turn the AFK preventer off
        afkPreventerOn = false
        toggleButton.Text = "Turn On"
        print("AntiAFK off")
    else
        -- Turn the AFK preventer on
        afkPreventerOn = true
        toggleButton.Text = "Turn Off"
        print("AntiAFK activated")
        screen.Visible = false  -- Hide the UI
    end
end

toggleButton.MouseButton1Click:Connect(toggleAFKPreventer)

local function disableIdleConnections()
  for i, v in pairs(getconnections(game.Players.LocalPlayer.Idled)) do
    v:Disable()
  end
end

game.Players.LocalPlayer.Idled:Connect(disableIdleConnections)

while true do
    
    if afkPreventerOn then
       
        game.Players.LocalPlayer:GetMouse().CFrame = CFrame.new(Vector3.new(math.random(-500, 500), math.random(-500, 500), math.random(-500, 500)))
        wait(0.1)
    end
end

